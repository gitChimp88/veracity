GET / 200 6.966 ms - 2
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"metadataUrl is: https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0/.well-known/openid-configuration?x-client-SKU=passport-azure-ad&x-client-Ver=3.0.12&p=b2c_1a_signinwithadfsidp","time":"2018-07-11T13:46:42.248Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"received the following items in params: {\"policy\":\"b2c_1a_signinwithadfsidp\",\"cachekey\":\"https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0/.well-known/openid-configuration?x-client-SKU=passport-azure-ad&x-client-Ver=3.0.12&p=b2c_1a_signinwithadfsidp\",\"metadata\":{\"url\":\"https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0/.well-known/openid-configuration?x-client-SKU=passport-azure-ad&x-client-Ver=3.0.12&p=b2c_1a_signinwithadfsidp\",\"metadata\":null,\"authtype\":\"oidc\",\"loggingNoPII\":false}}","time":"2018-07-11T13:46:42.248Z","v":0}
after helpers.authenticator(), res.user =  undefined
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"Parsing JSON retreived from the endpoint","time":"2018-07-11T13:46:43.139Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"Request to update the Open ID Connect Metadata","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"Algorithm retrieved was:  [ 'RS256' ]","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"Issuer we are using is:  https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0/","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"Key Endpoint we will use is:  https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/discovery/v2.0/keys?p=b2c_1a_signinwithadfsidp","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"Authentication endpoint we will use is:  https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/oauth2/v2.0/authorize?p=b2c_1a_signinwithadfsidp","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"Token endpoint we will use is:  https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/oauth2/v2.0/token?p=b2c_1a_signinwithadfsidp","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"User info endpoint we will use is:  undefined","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: Metadata Parser","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"The logout endpoint we will use is:  https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/oauth2/v2.0/logout?p=b2c_1a_signinwithadfsidp","time":"2018-07-11T13:46:43.140Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"entering Strategy.prototype._flowInitializationHandler","time":"2018-07-11T13:46:43.559Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"We are sending the response_type:  code","time":"2018-07-11T13:46:43.559Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"We are sending the response_mode:  form_post","time":"2018-07-11T13:46:43.559Z","v":0}
GET /login 302 1316.594 ms - 0





We accept key information from Azure AD here.
 req.user =  IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      { close: [Array],
        end: [Array],
        finish: [Function: onSocketFinish],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 11,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 366,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 51 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 46 41 6a 43 43 41 75 71 67 41 77 49 42 41 67 49 4a 41 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '9fafc985340699537280d7eb84bbc7be',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 10 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _requestCert: false,
     _rejectUnauthorized: true,
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 41118,
     _destroyed: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        end: [Function: end],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 59204 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     [Symbol(asyncId)]: 367,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 368,
     [Symbol(triggerAsyncId)]: 10,
     [Symbol(error-emitted)]: false },
  connection:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      { close: [Array],
        end: [Array],
        finish: [Function: onSocketFinish],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 11,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 366,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 51 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 46 41 6a 43 43 41 75 71 67 41 77 49 42 41 67 49 4a 41 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '9fafc985340699537280d7eb84bbc7be',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 10 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _requestCert: false,
     _rejectUnauthorized: true,
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 41118,
     _destroyed: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        end: [Function: end],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 59204 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     [Symbol(asyncId)]: 367,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 368,
     [Symbol(triggerAsyncId)]: 10,
     [Symbol(error-emitted)]: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers:
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'content-length': '1382',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     origin: 'https://login.microsoftonline.com',
     'upgrade-insecure-requests': '1',
     dnt: '1',
     'content-type': 'application/x-www-form-urlencoded',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     referer: 'https://login.microsoftonline.com/te/dnvglb2cprod.onmicrosoft.com/B2C_1A_base/samlp/sso/assertionconsumer',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en',
     cookie: 'connect.sid=s%3AeXsArkUrkkQsaCmHO6_mgZ8Ak8hxjayM.2Xw3ahoJcT0PWeeGxe%2FQhM8%2FU8Zjf6jestzqycg4VjA' },
  rawHeaders:
   [ 'Host',
     'localhost:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '1382',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'Origin',
     'https://login.microsoftonline.com',
     'Upgrade-Insecure-Requests',
     '1',
     'DNT',
     '1',
     'Content-Type',
     'application/x-www-form-urlencoded',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'Referer',
     'https://login.microsoftonline.com/te/dnvglb2cprod.onmicrosoft.com/B2C_1A_base/samlp/sso/assertionconsumer',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'en',
     'Cookie',
     'connect.sid=s%3AeXsArkUrkkQsaCmHO6_mgZ8Ak8hxjayM.2Xw3ahoJcT0PWeeGxe%2FQhM8%2FU8Zjf6jestzqycg4VjA' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client:
   TLSSocket {
     _tlsOptions:
      { secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      { close: [Array],
        end: [Array],
        finish: [Function: onSocketFinish],
        secure: [Function: onSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 11,
     connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _parent:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 366,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0 },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 51 51 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 46 41 6a 43 43 41 75 71 67 41 77 49 42 41 67 49 4a 41 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: '9fafc985340699537280d7eb84bbc7be',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 10 },
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     _requestCert: false,
     _rejectUnauthorized: true,
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev:
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 41118,
     _destroyed: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function],
        end: [Function: end],
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 59204 },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        lastHandshakeTime: 41100,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true },
     [Symbol(asyncId)]: 367,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 368,
     [Symbol(triggerAsyncId)]: 10,
     [Symbol(error-emitted)]: false },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/',
     path: '/',
     href: '/',
     _raw: '/' },
  params: {},
  query: {},
  res:
   ServerResponse {
     _events: { finish: [Array], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'localhost',
        npnProtocol: false,
        alpnProtocol: 'http/1.1',
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 11,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        _idleTimeout: 120000,
        _idleNext: [TimersList],
        _idlePrev: [TimersList],
        _idleStart: 41118,
        _destroyed: false,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 367,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 368,
        [Symbol(triggerAsyncId)]: 10,
        [Symbol(error-emitted)]: false },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'localhost',
        npnProtocol: false,
        alpnProtocol: 'http/1.1',
        authorized: false,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 11,
        connecting: false,
        _hadError: false,
        _handle: [TLSWrap],
        _parent: [Socket],
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: null,
        ssl: [TLSWrap],
        _requestCert: false,
        _rejectUnauthorized: true,
        _idleTimeout: 120000,
        _idleNext: [TimersList],
        _idlePrev: [TimersList],
        _idleStart: 41118,
        _destroyed: false,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 367,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 368,
        [Symbol(triggerAsyncId)]: 10,
        [Symbol(error-emitted)]: false },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Array] },
     end: [Function: end],
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array],
        'access-control-allow-headers': [Array] } },
  body:
   { state: 'NMXbCJOethZog83HoP8a6ErP0t59K7sZ',
     code: 'eyJraWQiOiJhOXZ5SjJVX25SM3ZmakZubEpUQlFLbHhfUFF3UDhqUm43NWl5a2g1Rm5FIiwidmVyIjoiMS4wIiwiemlwIjoiRGVmbGF0ZSIsInNlciI6IjEuMCJ9.COM6NFtxrtnVUuj3GyawLZPSgsrB3AsFaKsYplTkwoZD6-O6Ui3BLwmH9ZZ7QBYsR5QRx1WUyPIN3332l4WsA5jGDQMOoEV53vIhrw19-od8_Jc_GZ0lL6CWLbrKF8opC6dLQKK3JeiD1-ou7yEwyfgcaTPVahoxvD_G8E_v3cccElsdde9LUF7J3fjxnQO4g8PBaQI9sTzPNMVyIdxPYY8ZdfxSGiiHZU26gG3wbBfz3rudvKEFFVOblvmOZ6yhY_bkbonTInB8MEQ_tJfg9ITucrbaXC2p4xj_kZyePiHRYe3A0i2OLYlKm0nCWIobZDjCjlubRqDhAwGN612hxQ.ZvbfYwkj8ZoDdu6W.mrxmIv8BnFrMJJad7xsq4EeTQaJd3STLV1t3B6Cv1p-H2PxRARm40u8-_EMpd0h0K8NkBKjBzgufoGd7KfiFefpqLHopoki7K-9c1G6LBYPq-txkHA8kINkyCj5zJyXPyX8Dk29D_I4Uw0g2TW5MDjltlM5H7bYiZepP3pu_jC70WlWvAPNRm0dWuIIzbBJFSFUWW2POHmUy5aiI_QdCkxMitbjgebXmlbkl17zWJFGtvLacDau4CpaqxniUFvRkgOp6Kf0yXNvS6Lb8SOVb1VvMDtz-RpP4Qsx-BG6BJb7cvBW5gUpUpLlJuBxRjDixG2jDj9q01Tn74t7dxtC11yjYCR-PTfNNEmvagqlgtTkij3sGwcMwU4tmi-7aZom3bNWjuZKUrwiLHTlqHH73ltXHsL9422oWtEp90jUleIZDt4ivPCzsVPNJDAx2wiASEGyYC_AF_CXOg9EAR40HSbj9_VzIVxpJZfwjtk_SrY1ps6S8RbdhH63uceBawhZlRiRIXuMekM_oI7QJkZm45XhmoEb8g7uGRyeT3Te54JOq6e1saBKeDvNzv3jGUOqbo9TXz97fmNdt0r0Nh_XriFx2MzHD0tn8g1Np90G_hcVFTfJsDMI3ByaQZRh9uyl3KF3Ocfy1z27Soigdja856_IPPKQq47JSQ8StMQdUD7xe2oQNKTeL9pheJ6yTg-0rtz_kmvAxMlUCg2o5zex_eKdvQQK_dEZR7etgdsvs1b3Z0GWyJg3q_kKLS7krt4xM84IEJlrMzh6q---saR_AgR0tX13Y4VN5FoG-KUKxwlMmkfh1qAy_p19Ze89W1Q.d_qTXlNKDE4Z8HNiGc5k-Q' },
  _body: true,
  length: undefined,
  read: [Function],
  flash: [Function: _flash],
  _startAt: [ 169916, 328327835 ],
  _startTime: 2018-07-11T13:46:49.945Z,
  _remoteAddress: '::1',
  _parsedOriginalUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/',
     path: '/',
     href: '/',
     _raw: '/' },
  sessionStore:
   MemoryStore {
     _events:
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions:
      { eXsArkUrkkQsaCmHO6_mgZ8Ak8hxjayM: '{"cookie":{"originalMaxAge":null,"expires":null,"secure":true,"httpOnly":true,"path":"/"},"OIDC: b128d927-b7bc-4559-ad99-8290aae7beb8":{"content":[{"state":"NMXbCJOethZog83HoP8a6ErP0t59K7sZ","nonce":"f2Fbs_VJXYG3XESBLJtjriHSgowCJxDc","policy":"b2c_1a_signinwithadfsidp","timeStamp":1531316803559}]}}' },
     generate: [Function] },
  sessionID: 'eXsArkUrkkQsaCmHO6_mgZ8Ak8hxjayM',
  session:
   Session {
     cookie:
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true,
        secure: true },
     'OIDC: b128d927-b7bc-4559-ad99-8290aae7beb8': { content: [Array] } },
  _passport:
   { instance:
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Array],
        _deserializers: [Array],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        _sm: [SessionManager],
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Function],
        strategies: [Object] } },
  route:
   Route {
     path: '/',
     stack: [ [Layer], [Layer] ],
     methods: { post: true } } }
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"metadataUrl is: https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0/.well-known/openid-configuration?x-client-SKU=passport-azure-ad&x-client-Ver=3.0.12&p=b2c_1a_signinwithadfsidp","time":"2018-07-11T13:46:49.968Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"received the following items in params: {\"code\":\"eyJraWQiOiJhOXZ5SjJVX25SM3ZmakZubEpUQlFLbHhfUFF3UDhqUm43NWl5a2g1Rm5FIiwidmVyIjoiMS4wIiwiemlwIjoiRGVmbGF0ZSIsInNlciI6IjEuMCJ9.COM6NFtxrtnVUuj3GyawLZPSgsrB3AsFaKsYplTkwoZD6-O6Ui3BLwmH9ZZ7QBYsR5QRx1WUyPIN3332l4WsA5jGDQMOoEV53vIhrw19-od8_Jc_GZ0lL6CWLbrKF8opC6dLQKK3JeiD1-ou7yEwyfgcaTPVahoxvD_G8E_v3cccElsdde9LUF7J3fjxnQO4g8PBaQI9sTzPNMVyIdxPYY8ZdfxSGiiHZU26gG3wbBfz3rudvKEFFVOblvmOZ6yhY_bkbonTInB8MEQ_tJfg9ITucrbaXC2p4xj_kZyePiHRYe3A0i2OLYlKm0nCWIobZDjCjlubRqDhAwGN612hxQ.ZvbfYwkj8ZoDdu6W.mrxmIv8BnFrMJJad7xsq4EeTQaJd3STLV1t3B6Cv1p-H2PxRARm40u8-_EMpd0h0K8NkBKjBzgufoGd7KfiFefpqLHopoki7K-9c1G6LBYPq-txkHA8kINkyCj5zJyXPyX8Dk29D_I4Uw0g2TW5MDjltlM5H7bYiZepP3pu_jC70WlWvAPNRm0dWuIIzbBJFSFUWW2POHmUy5aiI_QdCkxMitbjgebXmlbkl17zWJFGtvLacDau4CpaqxniUFvRkgOp6Kf0yXNvS6Lb8SOVb1VvMDtz-RpP4Qsx-BG6BJb7cvBW5gUpUpLlJuBxRjDixG2jDj9q01Tn74t7dxtC11yjYCR-PTfNNEmvagqlgtTkij3sGwcMwU4tmi-7aZom3bNWjuZKUrwiLHTlqHH73ltXHsL9422oWtEp90jUleIZDt4ivPCzsVPNJDAx2wiASEGyYC_AF_CXOg9EAR40HSbj9_VzIVxpJZfwjtk_SrY1ps6S8RbdhH63uceBawhZlRiRIXuMekM_oI7QJkZm45XhmoEb8g7uGRyeT3Te54JOq6e1saBKeDvNzv3jGUOqbo9TXz97fmNdt0r0Nh_XriFx2MzHD0tn8g1Np90G_hcVFTfJsDMI3ByaQZRh9uyl3KF3Ocfy1z27Soigdja856_IPPKQq47JSQ8StMQdUD7xe2oQNKTeL9pheJ6yTg-0rtz_kmvAxMlUCg2o5zex_eKdvQQK_dEZR7etgdsvs1b3Z0GWyJg3q_kKLS7krt4xM84IEJlrMzh6q---saR_AgR0tX13Y4VN5FoG-KUKxwlMmkfh1qAy_p19Ze89W1Q.d_qTXlNKDE4Z8HNiGc5k-Q\",\"state\":\"NMXbCJOethZog83HoP8a6ErP0t59K7sZ\",\"nonce\":\"f2Fbs_VJXYG3XESBLJtjriHSgowCJxDc\",\"policy\":\"b2c_1a_signinwithadfsidp\",\"cachekey\":\"https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0/.well-known/openid-configuration?x-client-SKU=passport-azure-ad&x-client-Ver=3.0.12&p=b2c_1a_signinwithadfsidp\",\"metadata\":{\"url\":\"https://login.microsoftonline.com/a68572e3-63ce-4bc1-acdc-b64943502e9d/v2.0/.well-known/openid-configuration?x-client-SKU=passport-azure-ad&x-client-Ver=3.0.12&p=b2c_1a_signinwithadfsidp\",\"metadata\":null,\"authtype\":\"oidc\",\"loggingNoPII\":false}}","time":"2018-07-11T13:46:49.968Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"entering Strategy.prototype._authCodeFlowHandler, received code: eyJraWQiOiJhOXZ5SjJVX25SM3ZmakZubEpUQlFLbHhfUFF3UDhqUm43NWl5a2g1Rm5FIiwidmVyIjoiMS4wIiwiemlwIjoiRGVmbGF0ZSIsInNlciI6IjEuMCJ9.COM6NFtxrtnVUuj3GyawLZPSgsrB3AsFaKsYplTkwoZD6-O6Ui3BLwmH9ZZ7QBYsR5QRx1WUyPIN3332l4WsA5jGDQMOoEV53vIhrw19-od8_Jc_GZ0lL6CWLbrKF8opC6dLQKK3JeiD1-ou7yEwyfgcaTPVahoxvD_G8E_v3cccElsdde9LUF7J3fjxnQO4g8PBaQI9sTzPNMVyIdxPYY8ZdfxSGiiHZU26gG3wbBfz3rudvKEFFVOblvmOZ6yhY_bkbonTInB8MEQ_tJfg9ITucrbaXC2p4xj_kZyePiHRYe3A0i2OLYlKm0nCWIobZDjCjlubRqDhAwGN612hxQ.ZvbfYwkj8ZoDdu6W.mrxmIv8BnFrMJJad7xsq4EeTQaJd3STLV1t3B6Cv1p-H2PxRARm40u8-_EMpd0h0K8NkBKjBzgufoGd7KfiFefpqLHopoki7K-9c1G6LBYPq-txkHA8kINkyCj5zJyXPyX8Dk29D_I4Uw0g2TW5MDjltlM5H7bYiZepP3pu_jC70WlWvAPNRm0dWuIIzbBJFSFUWW2POHmUy5aiI_QdCkxMitbjgebXmlbkl17zWJFGtvLacDau4CpaqxniUFvRkgOp6Kf0yXNvS6Lb8SOVb1VvMDtz-RpP4Qsx-BG6BJb7cvBW5gUpUpLlJuBxRjDixG2jDj9q01Tn74t7dxtC11yjYCR-PTfNNEmvagqlgtTkij3sGwcMwU4tmi-7aZom3bNWjuZKUrwiLHTlqHH73ltXHsL9422oWtEp90jUleIZDt4ivPCzsVPNJDAx2wiASEGyYC_AF_CXOg9EAR40HSbj9_VzIVxpJZfwjtk_SrY1ps6S8RbdhH63uceBawhZlRiRIXuMekM_oI7QJkZm45XhmoEb8g7uGRyeT3Te54JOq6e1saBKeDvNzv3jGUOqbo9TXz97fmNdt0r0Nh_XriFx2MzHD0tn8g1Np90G_hcVFTfJsDMI3ByaQZRh9uyl3KF3Ocfy1z27Soigdja856_IPPKQq47JSQ8StMQdUD7xe2oQNKTeL9pheJ6yTg-0rtz_kmvAxMlUCg2o5zex_eKdvQQK_dEZR7etgdsvs1b3Z0GWyJg3q_kKLS7krt4xM84IEJlrMzh6q---saR_AgR0tX13Y4VN5FoG-KUKxwlMmkfh1qAy_p19Ze89W1Q.d_qTXlNKDE4Z8HNiGc5k-Q","time":"2018-07-11T13:46:49.970Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"In _getAccessTokenBySecretOrAssertion: we are using client secret","time":"2018-07-11T13:46:49.970Z","v":0}
{"name":"AzureAD: OIDC Passport Strategy","hostname":"Evans-MacBook-Pro.local","pid":94000,"level":30,"msg":"authentication failed due to: In _authCodeFlowHandler: failed to redeem authorization code: {\"statusCode\":400,\"data\":\"{\\\"error\\\":\\\"invalid_client\\\",\\\"error_description\\\":\\\"AADB2C90081: The specified client_secret does not match the expected value for this client. Please correct the client_secret and try again.\\\\r\\\\nCorrelation ID: 4b4b7ecb-8f98-41b8-a119-872615216638\\\\r\\\\nTimestamp: 2018-07-11 13:46:50Z\\\\r\\\\n\\\"}\"}","time":"2018-07-11T13:46:50.716Z","v":0}
POST / 302 775.651 ms - 56
Error: Four OHH four! req.originalUrl = /error

    at app.get (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/start.js:332:15)
    at Layer.handle [as handle_request] (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/route.js:137:13)
    at Route.dispatch (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/layer.js:95:5)
    at /Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:281:22
    at param (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:354:14)
    at param (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:365:14)
    at Function.process_params (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:410:3)
    at next (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:275:10)
    at /Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/start.js:118:97
    at Layer.handle [as handle_request] (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:317:13)
    at /Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:335:12)
    at next (/Users/evanhendrix1/programming/code/green-power-monitor/instatrust/veracity-app/node_modules/express/lib/router/index.js:275:10)
GET /error 404 5.002 ms - 2723